uniform float4x4 ViewProj;
uniform texture2d image;

/* Pre-Compute variables. */
uniform float4x4 color_matrix;


sampler_state textureSampler {
	Filter   = Linear;
	AddressU = Clamp;
	AddressV = Clamp;
};

struct VertData {
	float4 pos : POSITION;
	float2 uv : TEXCOORD0;
};

VertData VSDefault(VertData vert_in)
{
	VertData vert_out;
	vert_out.pos = mul(float4(vert_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv = vert_in.uv;
	return vert_out;
}

float4 PSColorFilterRGBA(VertData vert_in) : TARGET
{
	/* Grab the current pixel to perform operations on. */
	float4 currentPixel = image.Sample(textureSampler, vert_in.uv);

	/* Always address the gamma first. */
	/* currentPixel.rgb = pow(currentPixel.rgb, gamma); */

	/* Much easier to manipulate pixels for these types of operations
	 * when in a matrix such as the below. See
	 * http://www.graficaobscura.com/matrix/index.html and
	 * https://docs.rainmeter.net/tips/colormatrix-guide/for more info.
	 */
	currentPixel = mul(color_matrix, currentPixel);

	return currentPixel;
}

technique Draw
{
	pass
	{
		vertex_shader = VSDefault(vert_in);
		pixel_shader = PSColorFilterRGBA(vert_in);
	}
}
